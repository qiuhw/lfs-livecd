define std_build
    @tar xf $(FILE)
    @make -C $(DIR) -f ../Makefile compile-$@
    @make clean
    @touch $@
endef

define sep_dir_build
	@tar xf $(FILE)
	@rm -rf $(NM)-build
	@install -dv $(NM)-build
	@make -C $(NM)-build -f ../Makefile compile-$@
	@make clean
	@touch $@
endef

# This takes the form of 'download [filename] [url] [sha1sum]'
define download
	@cd $(SRC) ; if [ ! -f "$(1)" ] ; then $(WGET) "$(2)" ; \
	 elif ! echo "$(3)  $(SRC)/$(1)" | sha1sum -c - >/dev/null 2>/dev/null ; then \
	 $(WGET) -c "$(2)" ; fi
	@if echo "$(3)  $(SRC)/$(1)" | sha1sum -c - >/dev/null 2>/dev/null ; then \
	 echo $(BRW)sha1sum check on "$(SRC)/$(1)": $(GREEN)[ OK ]$(WHITE); \
	 else echo $(BRW)sha1sum check on "$(SRC)/$(1)": $(RED)[ FAILED ]$(WHITE); \
	 echo $(BRW)The sha1sum for the downloaded file is:$(WHITE) $$(sha1sum $(SRC)/$(1) | awk '{print $$1}'); exit 1 ; fi
	@ln -sf "$(SRC)/$(1)" .
endef

%.gz %.tgz %.bz2 %.zip %.patch %.diff %.rules %.ttf %.jpg %.run:
	$(call download,$@,$(URL-$@),$(SHA-$@))

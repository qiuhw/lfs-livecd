#!/bin/bash
#
# Unpacks a tar archive and returns (hopefully!) the top-level directory
# in the archive. Technically, it returns the second line of the archive list
# minus the first appearance of '/' and anything afterwards.

usage="
Usage: $0 [file]

"
get_top_dir() {
	case $1 in
		*zcat)
			top_dir=$($1 $file | tar -tf - | head -n2 | awk '{if ((FNR % 2) == 0) {print $1}}' | sed 's@/.*@@')
			;;
		tar)
			top_dir=$($1 -tf $file | head -n2 | awk '{if ((FNR % 2) == 0) {print $1}}' | sed 's@/.*@@')
			;;
	esac
}

if [ -z $1 ]
then
	echo $usage
	exit 1
fi

if [ ! -e $1 ]
then
	echo "No such file: $1"
	exit 1
fi

file=$1

tar_version=$(tar --version | head -n1 | awk '{print $NF}')
tar_major=$(echo $tar_version | awk -F. '{print $1}')
tar_minor=$(echo $tar_version | awk -F. '{print $2}')
ext=$(echo $1 | awk -F. '{print $NF}')

if [ $tar_major -eq 1 ]
then
	if [ $tar_minor -lt 15 ]
	then
		pipe=1
	else
		pipe=0
	fi
else
	echo "Unsupported version of tar: $tar_version"
	exit 1
fi

if [ $pipe -eq 1 ]
then
	case $ext in
		bz2|BZ2)
			get_top_dir bzcat
			rm -rf $top_dir
			bzcat $file | tar -xf - 2>/dev/null
			;;
		gz|GZ)
			get_top_dir zcat
			rm -rf $top_dir
			zcat $file | tar -xf - 2>/dev/null
			;;
		tar|TAR)
			get_top_dir tar
			rm -rf $top_dir
			tar -xf $file 2>/dev/null
			;;
		*)
	esac	
else
	get_top_dir tar
	rm -rf $top_dir
	tar -xf $file 2>/dev/null
fi

echo $top_dir
